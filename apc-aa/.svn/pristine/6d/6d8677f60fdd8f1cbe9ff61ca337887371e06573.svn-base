<?php
/**  Exports the slice definition as a template
 *    Two kinds of export:
 *        * for another AA installation - allows to change the id
 *        * for backup reasons - allows to export more defs at once
 *    Now you can export slice data too (all data or some only, if date
 *    is specified.
 *
 *    To show the exported text the page sliceexp_text.php3 is called.
 *
 * PHP version 7.2+
 *
 * LICENSE: This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program (LICENSE); if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * @version   $Id$
 * @author    Jakub Adamek, Pavel Jisl
 * @license   http://opensource.org/licenses/gpl-license.php GNU Public License
 * @copyright Copyright (C) 1999, 2000 Association for Progressive Communications
 * @link      https://www.apc.org/ APC
 *
*/

use AA\IO\DB\DB_AA;

$require_default_lang = true;      // do not use module specific language file
                                   // (message for init_page.php3)
require_once __DIR__."/../include/init_page.php3";
require_once __DIR__."/../admin/sliceexp_text.php3";
require_once __DIR__."/../include/formutil.php3";

// Make sure you have permissions to do this
if (!CheckPerms( $auth->auth["uid"], "aa", AA_ID, PS_ADD) ) {
    MsgPage(StateUrl(self_base())."index.php3", _m("You are not allowed to export / import slices"));
    exit;
}

/* Three likely options
1: Write a file  ($b_export_to_file set)
2: export to screen: Gives a textarea that can be cut-and-pasted from $SHOWTEXT
3: Neither, display a form
*/

set_time_limit( 120 );

if ($_POST['b_export_type']=='doc') {
    $exporter = new AA_Slice_Documentator($b_export_type, $b_export_gzip, $b_export_struct, $b_export_data, $b_export_spec_date, $b_export_from_date, $b_export_to_date, $b_export_hex, $b_export_views, $b_export_to_utf);
} else {
    $exporter = new AA_Slice_Exporter($b_export_type, $b_export_gzip, $b_export_struct, $b_export_data, $b_export_spec_date, $b_export_from_date, $b_export_to_date, $b_export_hex, $b_export_views, $b_export_to_utf);
}

if (isset($b_export_to_file)) {
    $exporter->exportToFile($slice_id, $export_slices, $SliceID);
    exit;
}

$apage = new AA_Adminpageutil('aaadmin','sliceexp');
$apage->setTitle(_m("Export slice structure"));
//$apage->addRequire(get_aa_url('/javascript/js_lib.min.js?v='.AA_JS_VERSION, '', false ));
$apage->setForm(['id'=>'formf','onsubmit'=>"return validate2()"]);
$apage->printHead($err, $Msg);

FrmTabCaption(_m("Export slice structure"));

if ($_POST['b_export_type']) {
    $exporter->exportToForm( $slice_id, $export_slices, $SliceID );
} else {
    $all_slices = DB_AA::select(['unpackid'=>'name'], 'SELECT LOWER(HEX(`id`)) AS unpackid, `name` FROM `module`', [['type', 'S']], ['priority','name']);
?>
    <tr><td class="tabtxt" colspan="2">
    <table width="100%" border="0" cellspacing="0" cellpadding="0">
        <tr><td class="tabtxt">
        <b><?php echo _m("Choose, if you want export slices structure, data or both.") ?></b><br>
        <input type="checkbox" name="b_export_struct" value="1" checked><?php echo _m("Export structure") ?><br>
        <input type="checkbox" name="b_export_data" value="1"><?php echo _m("Export data") ?><br>
        <input type="checkbox" name="b_export_views" value="1"><?php echo _m("Export views") ?><br>
        <?php if (function_exists('gzcompress')) {  //Check for Zlib support
        ?>
        <input type="checkbox" name="b_export_gzip" value="1"><?php echo _m("Use compression") ?><br>
        <?php } ?>
        <input type="checkbox" name="b_export_hex" value="1" checked><?php echo _m("HEX output") ?><br>
        <input type="checkbox" name="b_export_to_file" value="1"><?php echo _m("Store exported data in file") ?><br><br>
        <input type="checkbox" name="b_export_to_utf" value="1"><?php echo _m("Convert to UTF") ?><br><br>
        <table>
        <tr>
            <td class="tabtxt"><input type="checkbox" name="b_export_spec_date" value="1"><?php echo _m("Export data from specified dates: ") ?></td>
            <td class="tabtxt"><?php echo _m("From ") ?><input type="text" name="b_export_from_date" maxlength="10" width="10" onChange="b_export_date_onchange(this)"></td>
            <td class="tabtxt"><?php echo _m("to") ?><input type="text" name="b_export_to_date" maxlength="10" width="10" onChange="b_export_date_onchange(this)"></td>
        </tr>
        </table>
        </td>
    </tr>
<?php
    FrmTabSeparator(_m("Choose one of two export kinds:"));
?>
    <tr>
        <td class="tabtxt" width="50%">
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
            <tr><td class="tabtxt" width="100%">
            <b><?php echo _m("When exporting \"to Backup\" you may choose more slices at once.") ?></b></P>
            <?php echo _m("Select slices which you WANT to export:") ?>
            </td>
            <tr><td class="tabtxt" width="100%">
                <table width="200"><tr><td width="100%">
                <SELECT name="export_slices[]" size="8" class="tabtxt" multiple>
                <?php
                    foreach ($all_slices as $s_id => $name) {
                        echo "<option value=\"$s_id\"> $name </option>";
                    }
                ?>
                </select>
                </td></tr>
                </table>
        </table>
        </td>
        <td class="tabtxt" width="50%" valign="top">
            <b><?php echo _m("When exporting \"to another ActionApps\" only the current slice will be exported and you choose its new identificator.") ?></b></p>
            <b><?php echo _m("Choose a new slice identificator exactly 16 characters long: ") ?></b>
            <input type="text" name="SliceID" value="template" size="16" maxlength="16"></P>
            <input type="hidden" name="b_export_type" id="b_export_type" value="export">
        </td>
    </tr>
    <tr>
        <td>
          <input type="button" name="btn1" value="<?php echo _m("Export to Backup") ?>" onclick="document.getElementById('b_export_type').value='backup'; document.getElementById('formf').submit();">
          <input type="button" name="btn2" value="<?php echo _m("Show Datastructure Documentation") ?>" onclick="document.getElementById('b_export_type').value='doc'; document.getElementById('formf').submit();">
        </td>
        <td><input type="button" name="btn3" value="<?php echo _m("Export to another ActionApps") ?>" onclick="validate()"></td>
    </tr>
    </tr></td>
<?php
}
?>

</table>
<script>
    function b_export_date_onchange(vstup)  {
        error = 0; tecka = 0; den = 0; rok = 0; mesic = 0;
        for (index = 0; index < vstup.value.length; index++) {
            ch = vstup.value.charAt(index);
            if (ch != "0" && ch != "1" && ch != "2" && ch != "3" && ch != "4" && ch != "5" && ch != "6" && ch != "7" && ch != "8" && ch != "9" && ch != ".")
            { error = 1; }
            if ((ch == "0" || ch == "1" || ch == "2" || ch == "3" || ch == "4" || ch == "5" || ch == "6" || ch == "7" || ch == "8" || ch == "9") && (error == 0))
            {
                if (tecka == 0) {den=den + ch}
                if (tecka == 1) {mesic=mesic + ch}
                if (tecka == 2) {rok=rok + ch}
            }
            if (ch == "." && error == 0)
            {
                if (tecka == 1) {tecka=2}
                if (tecka == 0) {tecka=1}
            }
        }

        if ((den<1 || den >31) && (error == 0)) { error = 1; }
        if ((mesic<1 || mesic>12) && (error == 0)) { error = 1;}
        if (rok<1990 && tecka == 2 && error == 0 && rok != "") { error = 1;}
        if ((tecka == 2 && rok == "") || (tecka > 2)) { error = 2;}
        if (error == 1)
        {
            alert(<?php echo '"'._m("Date export error").'"' ?>);
            vstup.focus();
        }
        if (error == 2)
        {
            alert(<?php echo '"'._m("Date export error").'"' ?>);
            vstup.focus();
        }
        document.forms["f"].b_export_spec_date.checked = true;
    }

    function validate () {
        form = document.forms["f"];
        if (form.SliceID.value.length != 16) {
            alert (<?php echo '"'._m("The identificator should be 16 characters long, not ").'"' ?>
                + form.SliceID.value.length);
            form.SliceID.focus();
        }
        else {
            form.submit();
        }
    }
    function validate2() {
        sl_count = 0;
        x = document.f['export_slices[]'];
        form = document.forms["f"];
        for (i=0; i<x.length; i++) {
            sl_count += (x.options[i].selected ? 1 : 0);
        }
        if (sl_count == 0) {
            alert (<?php  echo '"'._m("You must select one or more slices to backup").'"' ?>);
            return false;
        }
        else {
            return true;
        }
    }
</script>

<?php
$apage->printFoot();
